{"ast":null,"code":"import { catchError, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiTestService {\n  getNow() {\n    console.log('getNow()');\n    return this.http.get(this.apiUrl).pipe(tap(_ => console.log('fetched now')), catchError(this.handleError('getNow', '')));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      //TODO: send the error to remove logging infratstructure\n      console.error(error); // log to console insetead\n      //TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n      // Let the app keep running by returning an empty result\n      return of(result);\n    };\n  }\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://www.enricofrison.cloud/api/v1/'; // URL to web api\n  }\n}\n\nApiTestService.ɵfac = function ApiTestService_Factory(t) {\n  return new (t || ApiTestService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiTestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiTestService,\n  factory: ApiTestService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,EAAOC,GAAG,QAAQ,gBAAgB;AACrD,SAAqBC,EAAE,QAAQ,MAAM;;;AAKrC,OAAM,MAAOC,cAAc;EAGzBC,MAAM;IACJC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAS,IAAI,CAACC,MAAM,CAAC,CACxCC,IAAI,CACHT,GAAG,CAACU,CAAC,IAAIN,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC,EACpCN,UAAU,CAAC,IAAI,CAACY,WAAW,CAAS,QAAQ,EAAE,EAAE,CAAC,CAAC,CACnD;EACH;EAEQA,WAAW,CAAIC,SAAS,GAAG,WAAW,EAAEC,MAAU;IACxD,OAAQC,KAAU,IAAmB;MACnC;MACAV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;MAEtB;MACA;MAEA;MACA,OAAOb,EAAE,CAACY,MAAW,CAAC;IACxB,CAAC;EACH;EAEAE,YACUT,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAzBN,WAAM,GAAG,wCAAwC,CAAC,CAAC;EAyB7B;;;AA1BnBJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFb;AAAM","names":["catchError","tap","of","ApiTestService","getNow","console","log","http","get","apiUrl","pipe","_","handleError","operation","result","error","constructor","factory","providedIn"],"sourceRoot":"","sources":["/Users/enricofrison/Documents/GitHub/Rb2syk/src/app/api-test.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiTestService {\n  private apiUrl = 'https://www.enricofrison.cloud/api/v1/'; // URL to web api\n\n  getNow() : Observable<string> {\n    console.log('getNow()');\n    return this.http.get<string>(this.apiUrl)\n    .pipe(\n      tap(_ => console.log('fetched now')),\n      catchError(this.handleError<string>('getNow', ''))\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      //TODO: send the error to remove logging infratstructure\n      console.error(error); // log to console insetead\n\n      //TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result\n      return of(result as T);\n    }\n  }\n\n  constructor(\n    private http: HttpClient) { }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}